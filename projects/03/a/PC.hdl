// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Increment function - counts from output
    Inc16(in=forInc, out=incOut);

    // Reset > Load > Increment
    // Selecting the counter value
    Mux16(a=in, b=incOut, sel=inc, out=outMuxinc); // in or increment
    Mux16(a=outMuxinc, b=in, sel=load, out=incMuxload); // increment or load
    Mux16(a=incMuxload, b=false, sel=reset, out=loadMuxreset); // load or reset

    // Set the load selector bit
    Mux(a=false, b=true, sel=inc, out=selinc); // 0 or inc
    Mux(a=selinc, b=true, sel=load, out=selload); // inc or load
    Mux(a=selload, b=true, sel=reset, out=selreset); // load or reset

    // Register - output an extra for incrementor
    Register(in=loadMuxreset, load=selreset, out=out, out=forInc);
}
